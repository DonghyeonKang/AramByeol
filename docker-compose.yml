version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: arambyeol-frontend
    ports:
      - "80:80"
    depends_on:
      - app
    environment:
      - VITE_API_URL=http://localhost:8080/api
    restart: unless-stopped

  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: arambyeol-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/arambyeol?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      CORS_ALLOWED_ORIGINS: http://localhost:5173,http://localhost
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped

  scraper:
    container_name: arambyeol-scraper
    build:
      context: ./scraper
      dockerfile: Dockerfile
    env_file:
      - ./scraper/.env
    volumes:
      - ./scraper/html_files:/app/html_files
      - ./scraper/logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    restart: always

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    container_name: arambyeol-mysql
    env_file:
      - ./mysql/.env  # ← 여기를 추가
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s